# This file was *autogenerated* from the file newpoly.sage.
from sage.all_cmdline import *   # import sage library
_sage_const_13 = Integer(13); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_10 = Integer(10); _sage_const_0 = Integer(0)
def calcula(p):
    if not(is_prime(p) and p%_sage_const_10 ==_sage_const_1 ):
        return
    d1 = ((p-_sage_const_1 )/_sage_const_2 )+_sage_const_1 
    d2 = ((p-_sage_const_1 )/_sage_const_10 )+_sage_const_1 
    count = _sage_const_0 
        
    for a in range(_sage_const_1 ,p):
        for b in range(_sage_const_1 ,p):
            l = []
            for x in range(_sage_const_0 ,p):
                   value = ( (x**d1) + (a*x**d2) + (b*x) ) % p
                   if l.count(value) == _sage_const_0 :
                           l.append(value)
            if len(l)==p:
              count = count+_sage_const_1 
              print str(p)+", "+str(count)


calcula(_sage_const_13 )
